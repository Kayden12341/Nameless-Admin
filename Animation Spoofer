local screenGui = Instance.new("ScreenGui")
local mainFrame = Instance.new("Frame")
local container = Instance.new("Frame")
local topbar = Instance.new("Frame")
local title = Instance.new("TextLabel")
local exitButton = Instance.new("TextButton")
local minimizeButton = Instance.new("TextButton")
local scrollFrame = Instance.new("ScrollingFrame")
local listLayout = Instance.new("UIListLayout")
local searchBar = Instance.new("TextBox")

function protectUI(sGui)
    local function blankfunction(...)
        return ...
    end

    local cloneref = cloneref or blankfunction

    local function SafeGetService(service)
        return cloneref(game:GetService(service)) or game:GetService(service)
    end

    local COREGUI = SafeGetService("CoreGui")
    local rPlayer = SafeGetService("Players"):FindFirstChildWhichIsA("Player")
    local coreGuiProtection = {}
    local RunService = SafeGetService("RunService")
    local LocalPlayer = SafeGetService("Players").LocalPlayer

    local function NAProtection(inst, var)
        if inst then
            if var then
                inst[var] = "\0"
                inst.Archivable = false
            else
                inst.Name = "\0"
                inst.Archivable = false
            end
        end
    end

    if (get_hidden_gui or gethui) then
        local hiddenUI = (get_hidden_gui or gethui)
        NAProtection(sGui)
        sGui.Parent = hiddenUI()
        return sGui
    elseif (not is_sirhurt_closure) and (syn and syn.protect_gui) then
        NAProtection(sGui)
        syn.protect_gui(sGui)
        sGui.Parent = COREGUI
        return sGui
    elseif COREGUI:FindFirstChildWhichIsA("ScreenGui") then
        pcall(function()
            for _, v in pairs(sGui:GetDescendants()) do
                coreGuiProtection[v] = rPlayer.Name
            end
            sGui.DescendantAdded:Connect(function(v)
                coreGuiProtection[v] = rPlayer.Name
            end)
            coreGuiProtection[sGui] = rPlayer.Name

            local meta = getrawmetatable(game)
            local tostr = meta.__tostring
            setreadonly(meta, false)
            meta.__tostring = newcclosure(function(t)
                if coreGuiProtection[t] and not checkcaller() then
                    return coreGuiProtection[t]
                end
                return tostr(t)
            end)
        end)
        if not RunService:IsStudio() then
            local newGui = COREGUI:FindFirstChildWhichIsA("ScreenGui")
            newGui.DescendantAdded:Connect(function(v)
                coreGuiProtection[v] = rPlayer.Name
            end)
            for _, v in pairs(sGui:GetChildren()) do
                v.Parent = newGui
            end
            sGui = newGui
        end
        return sGui
    elseif COREGUI then
        NAProtection(sGui)
        sGui.Parent = COREGUI
        return sGui
    elseif LocalPlayer and LocalPlayer:FindFirstChild("PlayerGui") then
        NAProtection(sGui)
        sGui.Parent = LocalPlayer:FindFirstChild("PlayerGui")
        return sGui
    else
        return nil
    end
end

screenGui.Name = "AnimationSpooferX"
protectUI(screenGui)
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.ResetOnSpawn = false

mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 10, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Position = UDim2.new(0.65, 0, 0.54, 0)
mainFrame.Size = UDim2.new(0, 420, 0, 280)
mainFrame.ClipsDescendants = true

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 10)
mainCorner.Parent = mainFrame

local mainGradient = Instance.new("UIGradient")
mainGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 10, 40)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(15, 5, 25)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 10, 40))
})
mainGradient.Parent = mainFrame

container.Name = "Container"
container.Parent = mainFrame
container.AnchorPoint = Vector2.new(0.5, 1)
container.BackgroundColor3 = Color3.fromRGB(20, 8, 30)
container.BackgroundTransparency = 0.2
container.BorderSizePixel = 0
container.Position = UDim2.new(0.5, 0, 1, -5)
container.Size = UDim2.new(1, -10, 1, -65)
container.ClipsDescendants = true

local containerCorner = Instance.new("UICorner")
containerCorner.CornerRadius = UDim.new(0, 8)
containerCorner.Parent = container

topbar.Name = "Topbar"
topbar.Parent = mainFrame
topbar.BackgroundColor3 = Color3.fromRGB(30, 12, 45)
topbar.BackgroundTransparency = 0.1
topbar.BorderSizePixel = 0
topbar.Size = UDim2.new(1, 0, 0, 30)

local topbarCorner = Instance.new("UICorner")
topbarCorner.CornerRadius = UDim.new(0, 8)
topbarCorner.Parent = topbar

local topbarBottomCover = Instance.new("Frame")
topbarBottomCover.Parent = topbar
topbarBottomCover.BackgroundColor3 = Color3.fromRGB(30, 12, 45)
topbarBottomCover.BorderSizePixel = 0
topbarBottomCover.Position = UDim2.new(0, 0, 1, -8)
topbarBottomCover.Size = UDim2.new(1, 0, 0, 8)

title.Name = "Title"
title.Parent = topbar
title.BackgroundTransparency = 1
title.Position = UDim2.new(0, 15, 0, 0)
title.Size = UDim2.new(0.7, 0, 1, 0)
title.Font = Enum.Font.GothamSemibold
title.Text = "Animation Spoofer X"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left

exitButton.Name = "ExitButton"
exitButton.Parent = topbar
exitButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
exitButton.BackgroundTransparency = 0.3
exitButton.Position = UDim2.new(1, -30, 0.5, -10)
exitButton.Size = UDim2.new(0, 20, 0, 20)
exitButton.Font = Enum.Font.GothamBold
exitButton.Text = "X"
exitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
exitButton.TextSize = 14
exitButton.AutoButtonColor = false

local exitCorner = Instance.new("UICorner")
exitCorner.CornerRadius = UDim.new(0, 4)
exitCorner.Parent = exitButton

minimizeButton.Name = "MinimizeButton"
minimizeButton.Parent = topbar
minimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
minimizeButton.BackgroundTransparency = 0.3
minimizeButton.Position = UDim2.new(1, -60, 0.5, -10)
minimizeButton.Size = UDim2.new(0, 20, 0, 20)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextSize = 18
minimizeButton.AutoButtonColor = false

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 4)
minimizeCorner.Parent = minimizeButton

searchBar.Name = "SearchBar"
searchBar.Parent = mainFrame
searchBar.BackgroundColor3 = Color3.fromRGB(30, 15, 45)
searchBar.BackgroundTransparency = 0.2
searchBar.Position = UDim2.new(0.5, -150, 0, 40)
searchBar.Size = UDim2.new(0, 300, 0, 30)
searchBar.Font = Enum.Font.Gotham
searchBar.PlaceholderText = "Search animations..."
searchBar.Text = ""
searchBar.TextColor3 = Color3.fromRGB(255, 255, 255)
searchBar.TextSize = 14
searchBar.ClearTextOnFocus = false

local searchCorner = Instance.new("UICorner")
searchCorner.CornerRadius = UDim.new(0, 6)
searchCorner.Parent = searchBar

scrollFrame.Name = "ScrollFrame"
scrollFrame.Parent = container
scrollFrame.BackgroundTransparency = 1
scrollFrame.Position = UDim2.new(0, 5, 0, 5)
scrollFrame.Size = UDim2.new(1, -10, 1, -10)
scrollFrame.BottomImage = ""
scrollFrame.MidImage = ""
scrollFrame.TopImage = ""
scrollFrame.ScrollBarThickness = 4
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
scrollFrame.ScrollBarImageTransparency = 0.7
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

listLayout.Parent = scrollFrame
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 5)

local minimized = false
local animationTable = {}
local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")

local function createAnimationButton(id)
    local str = string.match(tostring(id), "%d+")
    local button = Instance.new("Frame")
    button.Name = "AnimButton_" .. str
    button.Parent = scrollFrame
    button.BackgroundColor3 = Color3.fromRGB(40, 20, 60)
    button.BackgroundTransparency = 0.2
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, 0, 0, 60)
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Parent = button
    nameLabel.BackgroundTransparency = 1
    nameLabel.Position = UDim2.new(0, 10, 0, 5)
    nameLabel.Size = UDim2.new(1, -20, 0, 25)
    nameLabel.Font = Enum.Font.GothamSemibold
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextSize = 14
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local idLabel = Instance.new("TextLabel")
    idLabel.Name = "IdLabel"
    idLabel.Parent = button
    idLabel.BackgroundTransparency = 1
    idLabel.Position = UDim2.new(0, 10, 0, 30)
    idLabel.Size = UDim2.new(1, -20, 0, 20)
    idLabel.Font = Enum.Font.Gotham
    idLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    idLabel.TextSize = 12
    idLabel.Text = "ID: " .. str
    idLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local copyButton = Instance.new("TextButton")
    copyButton.Name = "CopyButton"
    copyButton.Parent = button
    copyButton.BackgroundColor3 = Color3.fromRGB(60, 30, 90)
    copyButton.BackgroundTransparency = 0.2
    copyButton.Position = UDim2.new(1, -80, 0.5, -15)
    copyButton.Size = UDim2.new(0, 70, 0, 30)
    copyButton.Font = Enum.Font.GothamSemibold
    copyButton.Text = "Copy ID"
    copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    copyButton.TextSize = 12
    
    local copyCorner = Instance.new("UICorner")
    copyCorner.CornerRadius = UDim.new(0, 4)
    copyCorner.Parent = copyButton
    
    pcall(function()
        local animInfo = MarketplaceService:GetProductInfo(tonumber(str))
        nameLabel.Text = animInfo.Name or "Unknown Animation"
    end)
    
    copyButton.MouseButton1Click:Connect(function()
        setclipboard(str)
        copyButton.Text = "Copied!"
        copyButton.BackgroundColor3 = Color3.fromRGB(60, 180, 60)
        task.delay(1, function()
            copyButton.Text = "Copy ID"
            copyButton.BackgroundColor3 = Color3.fromRGB(60, 30, 90)
        end)
    end)
    
    return button
end

NAdrag=function(ui, dragui)
    if not dragui then dragui = ui end
    local UserInputService = game:GetService("UserInputService")

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        local newXOffset = startPos.X.Offset + delta.X
        local newYOffset = startPos.Y.Offset + delta.Y
        
        local screenSize = ui.Parent.AbsoluteSize
        local newXScale = startPos.X.Scale + (newXOffset / screenSize.X)
        local newYScale = startPos.Y.Scale + (newYOffset / screenSize.Y)
    
        ui.Position = UDim2.new(newXScale, 0, newYScale, 0)
    end

    dragui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = ui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    ui.Active=true
end

local function setupButtonEffects()
    local function setupButtonEffect(button)
        button.MouseEnter:Connect(function()
            button.BackgroundTransparency = 0
        end)
        
        button.MouseLeave:Connect(function()
            button.BackgroundTransparency = 0.3
        end)
        
        button.MouseButton1Down:Connect(function()
            button:TweenSize(UDim2.new(0, button.Size.X.Offset * 0.95, 0, button.Size.Y.Offset * 0.95), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.1, true)
        end)
        
        button.MouseButton1Up:Connect(function()
            button:TweenSize(UDim2.new(0, button.Size.X.Offset / 0.95, 0, button.Size.Y.Offset / 0.95), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.1, true)
        end)
    end
    
    setupButtonEffect(exitButton)
    setupButtonEffect(minimizeButton)
end

local function setupSearchBar()
    searchBar.Changed:Connect(function(prop)
        if prop == "Text" then
            local searchText = searchBar.Text:lower()
            for _, button in pairs(scrollFrame:GetChildren()) do
                if button:IsA("Frame") and button.Name:match("AnimButton_") then
                    local nameLabel = button:FindFirstChild("NameLabel")
                    local idLabel = button:FindFirstChild("IdLabel")
                    
                    if nameLabel and idLabel then
                        if searchText == "" or 
                           nameLabel.Text:lower():find(searchText) or 
                           idLabel.Text:lower():find(searchText) then
                            button.Visible = true
                        else
                            button.Visible = false
                        end
                    end
                end
            end
        end
    end)
end

local function setupMinimizeButton()
    minimizeButton.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            container.Visible = false
            searchBar.Visible = false
            mainFrame:TweenSize(UDim2.new(0, 420, 0, 30), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
            minimizeButton.Text = "+"
        else
            mainFrame:TweenSize(UDim2.new(0, 420, 0, 280), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
            task.wait(0.3)
            container.Visible = true
            searchBar.Visible = true
            minimizeButton.Text = "-"
        end
    end)
end

exitButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

NAdrag(mainFrame)
setupButtonEffects()
setupSearchBar()
setupMinimizeButton()

local function monitorAnimations()
    while task.wait() do
        local character = game:GetService("Players").LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                local tracks = humanoid:GetPlayingAnimationTracks()
                for _, track in pairs(tracks) do
                    task.spawn(function()
                        local animId = track.Animation.AnimationId
                        if animId and animId ~= "" then
                            local alreadyAdded = false
                            for _, id in pairs(animationTable) do
                                if id == animId then
                                    alreadyAdded = true
                                    break
                                end
                            end
                            
                            if not alreadyAdded then
                                table.insert(animationTable, animId)
                                createAnimationButton(animId)
                            end
                        end
                    end)
                end
            end
        end
    end
end

task.spawn(monitorAnimations)